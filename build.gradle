plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco' // ✅ JaCoCo 플러그인 추가
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	testImplementation platform('org.junit:junit-bom:5.9.1')
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testRuntimeOnly 'com.h2database:h2'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation platform('org.junit:junit-bom:5.9.1')
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testRuntimeOnly 'com.h2database:h2'


	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'at.favre.lib:bcrypt:0.10.2'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // ✅ 테스트 실행 후 JaCoCo 리포트 생성
}

jacoco {
	toolVersion = "0.8.7" // ✅ 최신 버전 사용 가능
}

jacocoTestReport {
	dependsOn test // ✅ 테스트 실행 후 리포트 생성
	reports {
		xml.required = false
		csv.required = false
		html.required = true // ✅ HTML 리포트 활성화
	}
}
